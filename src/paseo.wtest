import paseo.*
describe "test de una familia que NO pasea" {


	var zapatillaIzquierda= new Prenda(desgaste = 1)
	var zapatillaDerecha = new Prenda(desgaste = 3)
	var mediaIzquierda = new Prenda(desgaste = 1) //elemento de par
	var mediaDerecha = new Prenda(desgaste = 3)
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendaPar(talle=s, izquierdo=mediaIzquierda,derecho=mediaDerecha)
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatillasZoe = new PrendaPar(talle=s) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new PrendaPesada(talle=s, abrigo=5) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new PrendaLiviana(talle=s) 
	// prenda pesada con desgaste default: 0
	var camperaZoe = new PrendaPesada(talle=s) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new Juguete(min=5, max=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new PrendaLiviana(talle=xs, desgaste=5) //prenda liviana
	//prenda liviana con desgaste default: 0
	var calzaMilena = new Prenda(talle=xs) //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotasMilena = new Prenda(talle=l /*completar */) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new Ninio(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete=ukelele)
	
	//familia	
	var familiaAptaSalir = new Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new Familia(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		
		assert.equals(6 , mediasZoe.nivelComodidad(zoe)  )
		assert.equals(8 , zapatillasZoe.nivelComodidad(zoe))
		assert.equals(8 ,jeanZoe.nivelComodidad(zoe))		
		assert.equals(10 ,remeraZoe.nivelComodidad(zoe))
		assert.equals(8 , camperaZoe.nivelComodidad(zoe))
		assert.equals(7 ,remeraMilena.nivelComodidad(milena))		
		assert.equals(10 ,calzaMilena.nivelComodidad(milena))
		assert.equals(-3 ,ojotasMilena.nivelComodidad(milena))
	}

//PUNTO 2		
	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.izquierdo()
		var mediaDer = mediasZoe.derecho()
		var zapaIzq = zapatillasZoe.izquierdo()
		var zapaDer = zapatillasZoe.derecho()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.izquierdo())
		assert.equals(mediaDer, zapatillasZoe.derecho())
		assert.equals(zapaIzq, zapatillasZoe.izquierdo())
		assert.equals(zapaDer, mediasZoe.derecho())
				
	}
	
	test "intercambiar pares no ok" {
		
		assert.throwsExceptionWithMessage("no se puede intercambiar",ojotasMilena.intercambiar(mediasZoe))
	}

//PUNTO 3	
	test "nivel de abrigo" {
		assert.equals(2 ,  mediasZoe.abrigo())
//		assert.equals(2 , /* abrigo de zapatillasZoe*/)
//		assert.equals(5 , /* abrigo de jeanZoe */)
//		assert.equals(1 , /* abrigo de remeraZoe*/)

//		assert.equals(3 , /* abrigo de camperaZoe*/)
//		assert.equals(1 , /* abrigo de remeraMilena*/)		
//		assert.equals(1 , /* abrigo de calzaMilena*/)
//		assert.equals(5 , /* abrigo de ojotasMilena*/)

	}

//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.puedePasear())
		assert.notThat(familiaNoAptaParaSalir.puedePasear())
	}
//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.infaltables())		
	}
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.chiquitos()
		)		
	}
	
//PUNTO 6	
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8 , mediaIzquierda.desgaste())
		assert.equals(4.2 , mediaDerecha.desgaste())
		assert.equals(3 , mediasZoe.desgaste())
		assert.equals(1 , zapatillasZoe.desgaste())
		assert.equals(1 , jeanZoe.desgaste())
		assert.equals(1 , remeraZoe.desgaste())
		assert.equals(1 , camperaZoe.desgaste())
		
	}
//PUNTO 7	
	test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no está lista?
		//El test está incompleto!
		familiaNoAptaParaSalir.pasear()
	}
	
	
}